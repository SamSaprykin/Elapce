<% layout('layouts/boilerplate') -%>
<head>
    <link rel='stylesheet' href='/stylesheets/article-show.css' />
    <link rel='stylesheet' href='/stylesheets/guide-show.css' />
    <link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.3.0/mapbox-gl-geocoder.css' type='text/css' />
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.css' rel='stylesheet' />
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.js'></script>
    <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.3.0/mapbox-gl-geocoder.min.js'></script>
</head>

<div class="article-wrapper">
    <h1 class="title-article"><%= guide.title %></h1>
    <div class="wrapper-link-icons">
        <a class="link-all-theme" href="/projects?location=<%= guide.location %>&price%5Bmin%5D=&price%5Bmax%5D=&area%5Bmin%5D=&area%5Bmax%5D=&seaDistance=&search=">Объекты в <%= guide.location %>  <span style="text-transform: lowercase;"><% guide.location %></span></a>
        <div class="icons-group">
            <a href=""><i class="fab fa-twitter icon-artcile"></i></a>
            <a href=""><i class="fab fa-facebook-f icon-artcile"></i></a>
        </div>
    </div>
    
    <img class="article-image lazy" 
         data-src="<%= image_url(guide.images[0].public_id, {width: 1000, height: 650,  crop: "fit"}) %>" 
         src="<%= image_url(guide.images[0].public_id, {width: 60, height: 60,  crop: "fit"}) %>"  
         alt="<%= guide.title %>">
    
    <div class="map-container">
        <div class="map-info">
            <a href="#" class="city-link"><%= guide.location %></a>
            <p class="map-distance">20 км до аэропорта</p>
            <p class="map-distance">8 км до центра города</p>
        </div>
        <div id='map'></div>
    </div>
    <p class="article-intro"><%= guide.introduction %></p>
    <p class="article-text" id="root"></p>
    <img class="article-image lazy" 
         
         data-src="<%= image_url(guide.images[1].public_id, {width: 1000, height: 650,  crop: "fit"}) %>" 
         src="<%= image_url(guide.images[1].public_id, {width: 60, height: 60,  crop: "fit"}) %>" 
         alt="<%= guide.title %>">

    <p class="article-conclusion" ><%= guide.conclusions %></p>
    <canvas id="myChart" width="100" height="50"></canvas>
    
    
    <% if (currentUser && currentUser.username === 'admin' ) { %>
        <div>
            <a href="/guides/<%= guide.id %>/edit">
            <button class="btn btn-light mt-2">Edit</button>
        </a> 
        </div>
        <div>
        <form action="/guides/<%= guide.id %>?_method=DELETE" method="POST">
            <input class="btn btn-light mt-2" type="submit" value="Delete">
        </form>
        </div>
    <% } %>
</div>




<script>
    const myImgs = document.querySelectorAll('.lazy');
    const config = {
        rootMargin: '50px 20px 75px 30px',
        threshold: [0, 0.25, 0.75, 1]
    };
    observer = new IntersectionObserver(entries => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const lazyImage = entry.target
                lazyImage.src = lazyImage.dataset.src
                lazyImage.classList.remove("lazy");
            }
        });
    },config);

    myImgs.forEach(image => {
        observer.observe(image);
    });
    var guide = <%- JSON.stringify(guide) %>;
    var body = { features: <%- JSON.stringify(guide.body) %> };
     
    var stringHTML = body.features;
    
    //Create temp element holder
    var tempElement = document.createElement("div");
    //Add fetched HTML to tempElement
    tempElement.innerHTML = body.features;
    
    //Now you can query it as it was a normal DOM element
    document.getElementById('root').appendChild(tempElement);
</script>
<script src='/javascripts/guide-show.js'></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"></script>
<script>
var dataGr = [<%= guide.data %>];
var labelsGr = [<%= guide.labels %>];
var ctx = document.getElementById('myChart').getContext('2d');
var myChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: labelsGr,
        datasets: [{
            label: 'Стоимость м2',
            data: dataGr,
            backgroundColor: [
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
            ],
            borderWidth: 2
        }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        }
    }
});
</script>